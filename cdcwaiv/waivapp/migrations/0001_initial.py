# Generated by Django 5.2 on 2025-04-25 22:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CaseStatusInfo',
            fields=[
                ('case_status_code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('case_description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='StudentPersonalInfo',
            fields=[
                ('csulb_id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('birthdate', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('employ_goal', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('enrollment_date', models.DateField()),
                ('updated_date', models.DateTimeField(auto_now_add=True)),
                ('case_manager', models.CharField(max_length=100)),
                ('intake_status', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DorCounselor',
            fields=[
                ('dor_counselor_id', models.AutoField(primary_key=True, serialize=False)),
                ('dor_counselor_name', models.CharField(max_length=100)),
                ('dor_counselor_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyClientListingLog',
            fields=[
                ('participant_id', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('fund_begin_date', models.DateField()),
                ('fund_end_date', models.DateField()),
                ('district', models.CharField(max_length=100)),
                ('updated_date', models.DateField()),
                ('case_status_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='waivapp.casestatusinfo')),
                ('dor_counselor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='waivapp.dorcounselor')),
            ],
        ),
        migrations.CreateModel(
            name='WaivServiceInfo',
            fields=[
                ('service_type', models.IntegerField(primary_key=True, serialize=False)),
                ('service_description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='WaivStaffInfo',
            fields=[
                ('waiv_staff_id', models.AutoField(primary_key=True, serialize=False)),
                ('waiv_staff_name', models.CharField(max_length=100)),
                ('waiv_staff_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='DisabilityInfo',
            fields=[
                ('csulb_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='waivapp.studentpersonalinfo')),
                ('disabilityType', models.CharField(max_length=100)),
                ('disabilityDetail', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StudentDoc',
            fields=[
                ('csulb_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='waivapp.studentpersonalinfo')),
                ('doc_name', models.CharField(max_length=255)),
                ('received_date', models.DateField()),
            ],
        ),
        migrations.AddField(
            model_name='studentpersonalinfo',
            name='participant_id',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='waivapp.monthlyclientlistinglog'),
        ),
        migrations.CreateModel(
            name='StudentAcademicLog',
            fields=[
                ('academic_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('academic_plan', models.CharField(max_length=100)),
                ('academic_level', models.CharField(max_length=50)),
                ('gpa', models.DecimalField(decimal_places=2, max_digits=4)),
                ('updated_date', models.DateField()),
                ('csulb_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='waivapp.studentpersonalinfo')),
            ],
        ),
        migrations.CreateModel(
            name='StudentLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('last_updated', models.DateField()),
                ('case_status_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='waivapp.casestatusinfo')),
                ('csulb_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='waivapp.studentpersonalinfo')),
            ],
        ),
        migrations.CreateModel(
            name='CounselingLog',
            fields=[
                ('counsel_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_checkin', models.DateField()),
                ('case_note', models.TextField()),
                ('csulb_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='waivapp.studentpersonalinfo')),
                ('service_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='waivapp.waivserviceinfo')),
                ('waiv_staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='waivapp.waivstaffinfo')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='studentpersonalinfo',
            unique_together={('csulb_id', 'participant_id')},
        ),
    ]
